#!/usr/bin/make -f

export DH_VERBOSE = 1
NX_VERSION := 21.0.4

%:
	dh $@

override_dh_auto_build:
	# Verify build dependencies
	@which node > /dev/null || (echo "ERROR: node not found. Please install nodejs as build dependency." && exit 1)
	@which curl > /dev/null || (echo "ERROR: curl not found. Please install curl as build dependency." && exit 1)
	
	# Download and extract nx from npm registry
	curl -o nx-$(NX_VERSION).tgz https://registry.npmjs.org/nx/-/nx-$(NX_VERSION).tgz
	mkdir -p debian/tmp/usr/lib/nx/node_modules/nx
	tar -xzf nx-$(NX_VERSION).tgz -C debian/tmp/usr/lib/nx/node_modules/nx --strip-components=1
	
	# Note: Skipping npm install as nx package should be self-contained
	
	# Create binary wrapper with Node.js version check
	mkdir -p debian/tmp/usr/bin
	cat > debian/tmp/usr/bin/nx << 'EOF'
#!/bin/bash
# NX wrapper script with Node.js version check

# Check Node.js version
NODE_VERSION=$$(node -v 2>/dev/null | sed 's/v//')
REQUIRED_VERSION="20.0.0"

# Version comparison function
version_lt() {
    # Returns 0 (true) if $$1 < $$2
    test "$$(printf '%s\n' "$$1" "$$2" | sort -V | head -n 1)" = "$$1"
}

# Check if Node.js version is sufficient
if [ -n "$$NODE_VERSION" ] && version_lt "$$NODE_VERSION" "$$REQUIRED_VERSION"; then
    echo "⚠️  Warning: NX requires Node.js 20 or higher. You have Node.js $$NODE_VERSION." >&2
    echo "" >&2
    echo "To update Node.js on Ubuntu/Debian, we recommend using NodeSource:" >&2
    echo "  curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -" >&2
    echo "  sudo apt-get install -y nodejs" >&2
    echo "" >&2
    echo "Alternative methods:" >&2
    echo "  - Using nvm: https://github.com/nvm-sh/nvm" >&2
    echo "  - Using fnm: https://github.com/Schniz/fnm" >&2
    echo "  - Using snap: sudo snap install node --classic --channel=20" >&2
    echo "" >&2
fi

# Run nx with proper NODE_PATH
NODE_PATH="/usr/lib/nx/node_modules" exec node /usr/lib/nx/node_modules/nx/bin/nx.js "$$@"
EOF
	chmod +x debian/tmp/usr/bin/nx

override_dh_auto_clean:
	rm -f nx-*.tgz
	dh_auto_clean

override_dh_auto_test:
	# Skip tests

override_dh_auto_install:
	# Recreate files that dh_prep may have removed
	mkdir -p debian/tmp/usr/lib/nx/node_modules/nx
	mkdir -p debian/tmp/usr/bin
	
	# Download and extract nx again if needed
	test -f nx-$(NX_VERSION).tgz || curl -o nx-$(NX_VERSION).tgz https://registry.npmjs.org/nx/-/nx-$(NX_VERSION).tgz
	tar -xzf nx-$(NX_VERSION).tgz -C debian/tmp/usr/lib/nx/node_modules/nx --strip-components=1
	
	# Install nx dependencies
	cd debian/tmp/usr/lib/nx/node_modules/nx && npm install --production --omit=dev
	
	# Recreate binary wrapper with Node.js version check
	cat > debian/tmp/usr/bin/nx << 'EOF'
#!/bin/bash
# NX wrapper script with Node.js version check

# Check Node.js version
NODE_VERSION=$$(node -v 2>/dev/null | sed 's/v//')
REQUIRED_VERSION="20.0.0"

# Version comparison function
version_lt() {
    # Returns 0 (true) if $$1 < $$2
    test "$$(printf '%s\n' "$$1" "$$2" | sort -V | head -n 1)" = "$$1"
}

# Check if Node.js version is sufficient
if [ -n "$$NODE_VERSION" ] && version_lt "$$NODE_VERSION" "$$REQUIRED_VERSION"; then
    echo "⚠️  Warning: NX requires Node.js 20 or higher. You have Node.js $$NODE_VERSION." >&2
    echo "" >&2
    echo "To update Node.js on Ubuntu/Debian, we recommend using NodeSource:" >&2
    echo "  curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -" >&2
    echo "  sudo apt-get install -y nodejs" >&2
    echo "" >&2
    echo "Alternative methods:" >&2
    echo "  - Using nvm: https://github.com/nvm-sh/nvm" >&2
    echo "  - Using fnm: https://github.com/Schniz/fnm" >&2
    echo "  - Using snap: sudo snap install node --classic --channel=20" >&2
    echo "" >&2
fi

# Run nx with proper NODE_PATH
NODE_PATH="/usr/lib/nx/node_modules" exec node /usr/lib/nx/node_modules/nx/bin/nx.js "$$@"
EOF
	chmod +x debian/tmp/usr/bin/nx
